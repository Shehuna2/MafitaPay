# Generated by Django 5.2.7 on 2025-10-20 13:57

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExchangeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exchange', models.CharField(choices=[('binance', 'Binance'), ('bybit', 'Bybit'), ('mexc', 'MEXC'), ('gateio', 'Gate.io'), ('bitget', 'Bitget'), ('wallet', 'External Wallet')], max_length=20, unique=True)),
                ('receive_qr', models.ImageField(blank=True, null=True, upload_to='exchange_qrcodes/')),
                ('contact_info', models.JSONField(blank=True, default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.CharField(choices=[('usdt', 'USDT'), ('sidra', 'SIDRA'), ('pi', 'PI'), ('bnb', 'BNB')], max_length=10, unique=True)),
                ('rate_ngn', models.DecimalField(decimal_places=4, max_digits=20)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExchangeRateMargin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_pair', models.CharField(default='USDT/NGN', max_length=20, unique=True)),
                ('profit_margin', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssetSellOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('asset', models.CharField(choices=[('usdt', 'USDT'), ('sidra', 'SIDRA'), ('pi', 'PI'), ('bnb', 'BNB')], max_length=10)),
                ('source', models.CharField(choices=[('binance', 'Binance'), ('bybit', 'Bybit'), ('mexc', 'MEXC'), ('gateio', 'Gate.io'), ('bitget', 'Bitget'), ('wallet', 'External Wallet')], max_length=20)),
                ('amount_asset', models.DecimalField(decimal_places=8, max_digits=18)),
                ('rate_ngn', models.DecimalField(decimal_places=4, max_digits=20)),
                ('amount_ngn', models.DecimalField(decimal_places=2, max_digits=20)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Crypto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('symbol', models.CharField(max_length=10, unique=True)),
                ('logo', models.ImageField(default='default_crypto_logo.png', upload_to='images/')),
                ('coingecko_id', models.CharField(max_length=50, null=True)),
                ('network', models.CharField(choices=[('ETH', 'Ethereum'), ('BNB', 'Binance Smart Chain'), ('ARB', 'Arbitrum'), ('BASE', 'Base'), ('OP', 'Optimism'), ('SOL', 'Solana'), ('TON', 'The-Open-Network'), ('SUI', 'Sui-Network'), ('NEAR', 'Near-Protocol'), ('POL', 'Polygon'), ('AVAX', 'Avalanche'), ('TRON', 'Tron'), ('XRP', 'XRP Ledger'), ('ADA', 'Cardano'), ('DOT', 'Polkadot'), ('LTC', 'Litecoin'), ('DOGE', 'Dogecoin'), ('SHIB', 'Shiba Inu'), ('MATIC', 'Polygon-MATIC'), ('FIL', 'Filecoin')], max_length=50)),
            ],
            options={
                'unique_together': {('coingecko_id', 'network')},
            },
        ),
        migrations.CreateModel(
            name='CryptoPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('input_currency', models.CharField(max_length=10)),
                ('crypto_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('wallet_address', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('request_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('tx_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crypto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gasfee.crypto')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentProof',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='payment_proofs/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='proof', to='gasfee.assetsellorder')),
            ],
        ),
    ]
